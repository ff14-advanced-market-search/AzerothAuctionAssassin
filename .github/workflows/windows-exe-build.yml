name: Build and Sign Windows Executable

on:
  workflow_dispatch:  # Allows you to trigger the workflow manually
  # push:
  #   branches:
  #     - main
  
jobs:
  build:
    runs-on: windows-latest  # Use a Windows runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Build Windows executable
      run: |
        python -m pip install pyinstaller
        pyinstaller --onefile --add-data "AzerothAuctionAssassinData:AzerothAuctionAssassinData" --add-data "utils:utils" AzerothAuctionAssassin.py

    # Decode the Base64 encoded certificate
    - name: Decode Certificate
      run: |
        $cert_content = '${{ secrets.CERT_BASE64 }}'
        $cert_bytes = [Convert]::FromBase64String($cert_content)
        $cert_path = "certificate.pfx"
        [IO.File]::WriteAllBytes($cert_path, $cert_bytes)
      shell: pwsh

    # Sign the executable
    - name: Sign Executable
      run: |
        $cert_path = "certificate.pfx"
        $password = "${{ secrets.CERT_PASSWORD }}"
        $timestamp_url = "http://timestamp.digicert.com"
        $executable_path = "dist\AzerothAuctionAssassin.exe"
        # Find signtool.exe dynamically
        $signtoolPath = Get-Command -Name signtool.exe -ErrorAction Stop | Select-Object -ExpandProperty Source
        & $signtoolPath sign /f $cert_path /p $password /tr $timestamp_url /td sha256 /fd sha256 /v $executable_path
      shell: pwsh

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.2.1
        release_name: Release v1.0.2.1
        draft: true
        prerelease: true

    - name: Upload Executable to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/AzerothAuctionAssassin.exe
        asset_name: AzerothAuctionAssassin.exe
        asset_content_type: application/octet-stream
